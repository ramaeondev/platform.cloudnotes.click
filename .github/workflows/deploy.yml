name: Deploy to AWS S3

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Capture start time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Clean install dependencies
        run: |
            rm -rf node_modules package-lock.json
            npm cache clean --force
            npm install
            npm install react-hot-toast --save
        
      - name: Build
        run: npm run build
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Deploy to S3
        run: aws s3 sync ./dist s3://${{ secrets.S3_BUCKET }} --delete
        
      - name: Create routing rules for SPA
        run: |
          # Create copy of index.html for common routes to handle refreshes properly
          for route in signin signup forgot-password reset-password auth/confirm profile terms integrations; do
            # Create necessary parent directories
            mkdir -p /tmp/$route
            cp ./dist/index.html /tmp/$route/index.html
            
            # Upload to correct S3 paths
            aws s3 cp /tmp/$route/index.html s3://${{ secrets.S3_BUCKET }}/$route/index.html
            aws s3 cp ./dist/index.html s3://${{ secrets.S3_BUCKET }}/$route
          done
        
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
      
      - name: Log and Update Deployment
        if: always()
        uses: ramaeondev/therama.dev/.github/actions/log-and-update-deployment@master
        with:
          start_time: ${{ env.START_TIME }}
          s3_bucket: ${{ secrets.S3_UPLOAD_BUCKET }}